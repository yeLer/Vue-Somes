<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Title</title>
  <script type="text/javascript" src="../lib/vue-2.4.0.js"></script>
  <script src="../lib/vue-router-3.0.1.js"></script>
  <style>
    
  </style>
</head>
<body>
  <div id="app">
    <!-- 如果在路由中，使用 查询字符串，给路由传递参数，则 不需要修改 路由规则的 path 属性 -->
    <router-link to="/login/10">登录</router-link>
    <router-link to="/register/1/lisi">注册</router-link>

    <router-view></router-view>
  </div>
  <script>
    var login = {
      template: '<h1>登录 --- {{ $route.params.id }}</h1>',
      data(){
        return {
          msg: '123'
        }
      },
      created(){ // 组件的生命周期钩子函数
        console.log(this.$route)
        console.log(this.$route.query.id)
      }
    }

    var register = {
      template: '<h1>注册--- {{ $route.params.id }}-- {{ $route.params.name }}</h1>'
    }

    var router = new VueRouter({
      routes: [
        // :id作为占位符，可等待传参
        { path: '/login/:id', component: login },
        { path: '/register/:id/:name', component: register }
      ]
    })

    var vm = new Vue({
    el: '#app', 
      data: {
        msg: 'Vue'
      },
      methods: {
        
      },
      // router: router
      router //挂载路由，是上面的简写形式
    })
  </script>
</body>
</html>