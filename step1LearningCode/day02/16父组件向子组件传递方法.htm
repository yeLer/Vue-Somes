<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Title</title>
  <script type="text/javascript" src="../lib/vue-2.4.0.js"></script>
  <style>
  </style>
</head>

<body>
  <div id="app">
    <!-- 父组件向子组件 传递 方法，使用的是 事件绑定机制； 
      v-on, 当我们自定义了 一个 事件属性之后，那么，子组件就能够，通过某些方式，来调用 传递进去的 这个 方法了 -->
    <com2 v-on:func="show12"></com2>
  </div>

  <template id="tmpl">
    <div>
      <h1>这是子组件</h1>
      <input type="button" value="这是子组件中的按钮 - 点击它，触发 父组件传递过来的 func 方法" @click="myclick">
    </div>
  </template>
  <script>
    var com2 = {
      template: "#tmpl",
      data() {
        return {
          sonmsg: { name: '小头儿子', age: 6 }
        }
      },
      methods: {
        myclick() {
          // console.log("ok")
          // this是当前组件的对象 
          //  emit 英文原意： 是触发，调用、发射的意思
          // this.$emit('func')
          // 还可以在子组件调用父组件的方法的时候传参
          // this.$emit('func', 123, 456)
          this.$emit('func', this.sonmsg)
        }
      }
    }

    var vm = new Vue({
      el: '#app',
      data: {
        msg: 'Vue',
        dataMsgFromSon: "",
      },
      methods: {
        show() {
          console.log("调用了父组件的show方法!")
        },
        show12(arg1) {
          console.log(arg1.name + arg1.age + "岁了")
          this.dataMsgFromSon = arg1
        },
        show123(arg1, arg2) {
          console.log("调用了父组件的show方法!---" + arg1 + arg2)
        }
      },
      components: {
        com2,
      }
    })
  </script>
</body>

</html>